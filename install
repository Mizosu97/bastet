#!/bin/bash




$devcurn = $(pwd)
echo "Updating your current install to the latest packages."
sudo -S pacman -Syu

echo "Installing dependencies."
sudo -S pacman -S lua alacritty firefox neovim neofetch fish i3-gaps i3status dmenu picom feh xclip maim curl

if [ -d "$HOME/.mizOS" ]; then
	mv $HOME/.mizOS $HOME/mizOS
	mv $HOME/mizOS /var/
	sudo chmod 777 /var/mizOS
fi

echo "Checking install type."
if [ -d "/var/mizOS" ]; then
	echo "| Performing system update."
else
	echo "| Performing system install."
	printf "\n\n\nAre you installing SystemD mizOS onto an Asus laptop? (y/n)\n\n> "
	read ans

	if [ $ans == "y" ]; then
		echo "Installing Asus laptop utilities."
		sudo -S pacman -S asusctl supergfxctl
		echo "Enabling asusctl and supergfxctl."
		printf "\n\n\n Are you using the ISO image? (y/n)"
		read ans
		if [ $ans == "y" ]; then
			echo " !! After installation, run miz gfx setup !!"
		else
			sudo -S systemctl enable --now power-profiles-daemon.service
			sudo -S systemctl enable --now supergfxd
		fi
	fi

	echo "| Checking $HOME/.config"
	if [ -d "$HOME/.config" ]; then
		echo "  > $HOME/.config already exists."
	else
		echo "  > Creating $HOME/.config"
		mkdir $HOME/.config
	fi

	echo "  > Creating /var/mizOS"
	sudo mkdir /var/mizOS
	sudo chmod 777 /var/mizOS
	echo "  > Enabling fish."
	echo "fish" >> $HOME/.bashrc
fi



echo -e "\nChecking filesystem."
echo "| Checking core folder."
if [ -d "/var/mizOS/core" ]; then
	echo "  > core folder present."
else
	echo "  > Creating /var/mizOS/core"
	mkdir /var/mizOS/core
fi

echo "| Checking src folder."
if [ -d "/var/mizOS/src" ]; then
	echo "  > src folder present."
else
	echo "  > Creating /var/mizOS/src"
	mkdir /var/mizOS/src
fi

echo "| Checking packages folder."
if [ -d "/var/mizOS/packages" ]; then
	echo "  > Packages folder present."
else
	echo "  > Creating /var/mizOS/packages"
	mkdir /var/mizOS/packages
fi

echo "| Checking repo folder."
if [ -d "/var/mizOS/repo" ]; then
	echo "  > repo folder present."
else
	echo "  > Creating /var/mizOS/repo"
	mkdir /var/mizOS/repo
fi

echo "| Checking work folder."
if [ -d "/var/mizOS/work" ]; then
	echo "  > work folder present."
else
	echo "  > Creating /var/mizOS/work"
	mkdir /var/mizOS/work
fi

echo "| Checking init folder."
if [ -d "/var/mizOS/init" ]; then
	echo "  > init folder present."
	echo "  > Clearing old init folder."
	rm -rf /var/mizOS/init/*
else
	echo "  > Creating init folder."
	mkdir /var/mizOS/init
fi

echo "| Creating security folder."
if [ -d "/var/mizOS/security" ]; then
	echo "  > security folder present."
else
	echo "  > Creating security folder."
	cp -r assets/os/security /var/mizOS
fi

echo "| Checking backup folder."
if [ -d "/var/mizOS/backup" ]; then
	echo "  > Backup folder present, clearing."
	rm -rf /var/mizOS/backup/*
else
	echo "  > Creating backup folder."
	mkdir /var/mizOS/backup
fi

echo "| Checking config folder.."
if [ -d "/var/mizOS/config" ]; then
	echo "  > config folder found, backing up current configuration."
	mv /var/mizOS/config/* /var/mizOS/backup/
else
	echo "  > Creating config folder."
	mkdir /var/mizOS/config
fi



echo -e "\nGenerating config files."
cp -r assets/system_config/config/* /var/mizOS/config

echo "| Creating config symlinks."
echo "  > Creating i3 symlink."
if [ -d "$HOME/.config/i3" ]; then
	rm -rf $HOME/.config/i3/*
else
	mkdir $HOME/.config/i3
fi
ln -s /var/mizOS/config/i3/config $HOME/.config/i3/config

echo "  > Creating picom symlink."
if [ -f "$HOME/.config/picom.conf" ]; then
	rm $HOME/.config/picom.conf
fi
ln -s /var/mizOS/config/picom/picom.conf $HOME/.config/picom.conf

echo "  > Creating alacritty symlink."
if [ -d "$HOME/.config/alacritty" ]; then
	rm -rf $HOME/.config/alacritty/*
else
	mkdir $HOME/.config/alacritty
fi
ln -s /var/mizOS/config/alacritty/alacritty.yml $HOME/.config/alacritty/alacritty.yml

echo "  > Creating fish symlink."
if [ -d "$HOME/.config/fish" ]; then
	rm -rf $HOME/.config/fish/*
else
	mkdir $HOME/.config/fish
fi
ln -s /var/mizOS/config/fish/config.fish $HOME/.config/fish/config.fish



echo -e "\nInstalling core system."
echo "| Detecting init system."
if test -f "/usr/bin/sv"; then
        echo "  > Runit detected."
        cp assets/os/init/runit/init.lua /var/mizOS/init
elif test -f "/usr/bin/systemctl"; then
        echo "  > SystemD detected."
        cp assets/os/init/systemd/init.lua /var/mizOS/init
elif test -f "/usr/bin/rc-service"; then
        echo "  > OpenRC detected."
        cp assets/os/init/openrc/init.lua /var/mizOS/init
fi
echo "| Installing frontend and backend."
echo "  > Installing the mizOS.lua backend."
if [ -f "/var/mizOS/core/mizOS.lua" ]; then
	rm /var/mizOS/core/mizOS.lua
fi
cp assets/os/mizOS.lua /var/mizOS/core

echo "  > Installing the miz frontend."
if [ -f "/usr/bin/miz" ]; then
	sudo rm /usr/bin/miz
fi
chmod +x assets/os/miz
sudo -S cp assets/os/miz /usr/bin



echo -e "\nFinishing up."
echo "| Installing system identification files."
echo "  > Replacing /etc/os-release"
sudo -S rm /etc/os-release
sudo -S cp assets/details/os-release /etc

echo "  > Replacing /etc/lsb-release"
sudo -S rm /etc/lsb-release
sudo -S cp assets/details/lsb-release /etc

echo "  > Replacing /usr/bin/neofetch"
sudo -S rm /usr/bin/neofetch
sudo -S cp assets/details/neofetch /usr/bin


echo "| Checking source folder."
if [ -d "/var/mizOS/src/mizOS" ]; then
	echo "  > Cleaning source folder."
	rm -rf /var/mizOS/src/mizOS
else
	echo "  > Source folder not found, enjoy your mizOS installation :)"
fi


if [[ $1 == "dev" ]]; then
	echo -e "\nDev mode active."
	sudo -S cp $devcurn/assets/dev/miz /usr/bin/
	cp $devcurn/assets/os/mizOS.lua /var/mizOS/core/
fi


echo -e "\nGenerating i3 config."
cd /var/mizOS/config/i3 && ./genconf

echo -e "\n\n"

echo "My work here is done! You should probably reboot."
echo "  "
echo "If you are currently using i3-gaps, reload with MOD+shift+c."
echo " "
echo -e "mizOS theming is installed on a per-user basis. If you want mizOS theming on another user, run \"miz update\" from that user."
echo " "
echo -e "Remember, \"sudo pacman -Syu\" does not update mizOS, use \"miz update\" instead."
